---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import IconLinkExternal from "@/icons/IconLinkExternal.astro";
import IconArrowUp from "@/icons/IconArrowUp.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslations } from "@/i18n/utils";
import type { languageList } from "@/i18n/ui";
import TooltipCursor from "@/components/TooltipCursor.astro";
const currentLang = Astro.currentLocale || "es";
const translateLabels = useTranslations(
    currentLang as keyof typeof languageList,
);

export async function getStaticPaths() {
    const semanas = await getCollection("semanas");
    return semanas.flatMap((semana: any) =>
        semana.data.temas.map((tema: any) => ({
            params: { slug: tema.slug },
            props: {
                tema,
            },
        })),
    );
}
const { tema }: any = Astro.props;
---

<Layout>
    <div class="space-y-5 py-10 text-white">
        <div class="flex justify-between items-center">
            <div class="p-2 flex gap-2 items-center">
                <a
                    href={getRelativeLocaleUrl(currentLang, "/temas")}
                    class="w-12 h-12 rounded-full bg-black/40 shadow-inner shadow-white/40 flex justify-center items-center hover:scale-105 cursor-pointer group relative"
                >
                    <IconArrowUp className="-rotate-90 w-5 h-5" />
                    <TooltipCursor
                        label="Volver"
                        position="top-[51px] left-1/2"
                    />
                </a>
                <p class="uppercase font-semibold">{tema.titulo}</p>
            </div>
            <div
                class="text-center bg-violet-500/70 rounded-lg p-2 w-32 sm:w-60"
            >
                <p class="text-sm text-white font-semibold mb-2">
                    {tema.tips}
                </p>
            </div>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-3 gap-0 sm:gap-2">
            <!-- tasks -->
            <div
                class="sm:h-[30rem] overflow-y-auto h-[15rem] border-white/10 backdrop-blur-2xl col-span-2 rounded-lg w-full mb-2 sm:mb-0"
            >
                {
                    tema.tareas ? (
                        tema.tareas.map((tarea: any) => (
                            <details class="custom-details w-full rounded-lg border bg-white/10 border-white/20 hover:bg-white/15 backdrop-blur-lg dark:border-gray-700 transition-colors cursor-pointer relative mb-2 text-white">
                                <summary class="text-gray-white dark:text-gray-300 flex items-center justify-between list-none font-semibold px-4 py-3">
                                    {translateLabels(
                                        "topics.details.prefix.task",
                                    )}
                                    : {tarea.titulo}
                                    <svg
                                        class="w-5 h-5 transform transition-transform duration-200 group-open:rotate-90"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M9 5l7 7-7 7"
                                        />
                                    </svg>
                                </summary>
                                <div class="mt-4 text-gray-50 dark:text-gray-100 bg-black/30 p-2 rounded-md">
                                    {tarea.descripcion}
                                </div>
                            </details>
                        ))
                    ) : (
                        <div class="flex items-center justify-center text-center bg-white/5 border-white/20  rounded-lg sm:h-[30rem] h-[15rem]">
                            <p class="text-white dark:text-gray-400 bg-black/10 px-3 py-2 rounded-lg">
                                {translateLabels("topics.details.no.task")}
                            </p>
                        </div>
                    )
                }
            </div>
            <!-- Resources -->
            <div
                class="col-span-1 rounded-lg overflow-y-auto sm:h-[30rem] h-[15rem] border-white/10 bg-white/5 backdrop-blur-2xl w-full p-4"
            >
                <div class="p-2 text-center font-buycat text-2xl text-white">
                    <p>{translateLabels("topics.details.resource.title")}</p>
                </div>
                {
                    tema.recursos ? (
                        tema.recursos.map((recurso: any) => (
                            <a
                                href={recurso.url}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                <div class="py-3 px-2 flex items-center justify-between group cursor-pointer w-full bg-black/10 rounded-lg mb-1">
                                    <p class="text-sm sm:text-base group-hover:text-cyan-300">
                                        {recurso.nombre}
                                    </p>
                                    <IconLinkExternal className="w-5 h-5 group-hover:text-cyan-300" />
                                </div>
                            </a>
                        ))
                    ) : (
                        <div class="flex items-center justify-center text-center bg-white/5 border-white/20 rounded-lg sm:h-[30rem] h-[15rem]">
                            <p class="text-white dark:text-gray-400 bg-black/10 px-3 py-2 rounded-lg">
                                {translateLabels("topics.details.no.resource")}
                            </p>
                        </div>
                    )
                }
            </div>
        </div>
    </div>
    <style>
        details > summary {
            list-style: none;
        }
        details > summary::-webkit-details-marker {
            display: none;
        }

        details[open] svg {
            transform: rotate(90deg);
        }
    </style>
</Layout>
