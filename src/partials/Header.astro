---
import LogoRef from "@/components/LogoRef.astro";
import SelectLang from "@/components/SelectLang.astro";
import ThemeToogle from "@/components/ThemeToogle.astro";
import TooltipCursor from "@/components/TooltipCursor.astro";
import { languageList } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";
// import IconMenu from "@/icons/IconMenu.astro";
import IconTranslate from "@/icons/IconTranslate.astro";
// import IconX from "@/icons/IconX.astro";
import { SignedIn, UserButton } from "@clerk/astro/components";
const currentLang = Astro.currentLocale || "es";
const translateLabels = useTranslations(
    currentLang as keyof typeof languageList,
);
---

<header
    class="sticky top-3 z-10 w-full rounded-xl border border-white/10 bg-black/25 backdrop-blur-3xl shadow-inner shadow-white/50"
>
    <div class="flex items-center justify-between p-3 px-4 sm:px-6 lg:px-10">
      <LogoRef />

        <!-- Desktop Navigation -->
        <nav
            class="hidden sm:hidden md:flex gap-5 text-white/90 font-semibold text-sm sm:text-base"
            id="desktop-nav"
        >
            <a
                href={"#" + translateLabels("nav.about.href")}
                class="hover:text-white transition-colors group relative flex flex-col"
            >
                <span class="relative">{translateLabels("nav.about")}</span>
                <div
                    class="absolute bottom-0 left-0 w-full h-0.5 transform translate-y-[-100%] bg-gradient-to-r from-pink-400 to-cyan-400 opacity-0 transition-all duration-300 ease-out group-hover:translate-y-0 group-hover:opacity-100"
                >
                </div>
            </a>
            <a
                href={"#" + translateLabels("nav.sponsors.href")}
                class="hover:text-white transition-colors group relative"
            >
                <span class="relative">{translateLabels("nav.sponsors")}</span>
                <div
                    class="absolute bottom-0 left-0 w-full h-0.5 transform translate-y-[-100%] bg-gradient-to-r from-pink-400 to-cyan-400 opacity-0 transition-all duration-300 ease-out group-hover:translate-y-0 group-hover:opacity-100"
                >
                </div></a
            >
        </nav>

        <!-- Right side controls -->
        <div class="flex items-center gap-2 sm:gap-3">
            <!-- Language Selector -->
            <button
                id="select-toggle"
                class="cursor-pointer flex items-center gap-1 p-2 bg-white/10 rounded-full transition-colors text-xs relative group"
            >
                <IconTranslate className="size-4" />
                <span class="hidden sm:block">
                    <span class="font-semibold"
                        >{
                            languageList[
                                currentLang as keyof typeof languageList
                            ] || "Español"
                        }</span
                    >
                </span>
                <span class="block sm:hidden">
                    <span class="font-semibold uppercase"
                        >{
                            currentLang || 'es'
                        }</span
                    >
                </span>
                <TooltipCursor
                    label={translateLabels("header.btn.translate")}
                    position="top-[40px] left-1/2"
                />
            </button>

            <ThemeToogle />

            <SignedIn class="size-[35px]">
              <div class="size-[35px] bg-white/10 rounded-full">
                <UserButton  />
              </div>
            </SignedIn>

            <!-- Mobile Menu Button -->
            <!-- <button
                class="sm:flex md:hidden flex p-1.5 sm:p-2 bg-white/10 rounded-full transition-colors"
                id="menu-toggle"
                title="Cambiar de tema"
                aria-label="Toggle menu"
            >
                <IconMenu
                    className="w-5 h-5 sm:w-6 sm:h-6"
                    idName="menu-icon"
                />
                <IconX
                    className="w-5 h-5 sm:w-6 sm:h-6 hidden"
                    idName="close-icon"
                />
            </button> -->
        </div>
    </div>

    <!-- Mobile Menu Dropdown -->
    <!-- <div
        class="absolute top-full left-0 right-0 mt-1 hidden sm:hidden md:hidden text-sm sm:text-base"
        id="mobile-menu"
    >
        <div
            class="mx-4 rounded-xl border border-white/10 bg-black/80 backdrop-blur-3xl shadow-inner shadow-white/50"
        >
            <nav class="flex flex-col gap-2 p-4 text-gray-300 font-semibold">
                <a
                    href={"#" + translateLabels("nav.about.href")}
                    class="p-2 hover:bg-white/80 hover:text-white rounded-lg transition-colors"
                >
                    {translateLabels("nav.about")}
                </a>
                <a
                    href={"#" + translateLabels("nav.sponsors.href")}
                    class="p-2 hover:bg-white/80 hover:text-white rounded-lg transition-colors"
                >
                    {translateLabels("nav.sponsors")}
                </a>
            </nav>
        </div>
    </div> -->
</header>
<SelectLang />

<script>
    // Manejo del scroll
    const header = document.querySelector("#header");
    const handleScroll = () => {
        if (window.scrollY > 0) {
            header?.classList.add("bg-black/50");
            header?.classList.remove("bg-black/25");
        } else {
            header?.classList.add("bg-black/25");
            header?.classList.remove("bg-black/50");
        }
    };
    window.addEventListener("scroll", handleScroll);

    // Manejo del menú móvil
    const menuToggle = document.querySelector("#menu-toggle");
    const mobileMenu = document.querySelector("#mobile-menu");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    menuToggle?.addEventListener("click", () => {
        mobileMenu?.classList.toggle("hidden");
        menuIcon?.classList.toggle("hidden");
        closeIcon?.classList.toggle("hidden");
    });

    // Ocultar elementos en la página /temas
    document.addEventListener("DOMContentLoaded", () => {
        let path = window.location.pathname;
        let n_path = path.split("/").length;
        if (n_path === 4 || n_path === 5 || path === "/temas/" || path === "/warmichat") {
            const nav = document.querySelector("#desktop-nav") as HTMLElement;
            if (nav) nav.style.display = "none";
            menuToggle?.classList.add("hidden");
        }
    });

    // Cerrar menú móvil al hacer click en un enlace
    const mobileLinks = document.querySelectorAll("#mobile-menu a");
    mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
            mobileMenu?.classList.add("hidden");
            menuIcon?.classList.remove("hidden");
            closeIcon?.classList.add("hidden");
        });
    });
</script>
