---
import IconTranslate from "@/icons/IconTranslate.astro";
import i18next from "i18next";
import { localizePath } from "astro-i18next";
import localeEmoji from "locale-emoji";
import ISO6991 from "iso-639-1";
import TooltipCursor from "./TooltipCursor.astro";

interface languageMapping {
    [localeCode: string]: string;
}

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
    showFlag?: boolean;
    languageMapping?: languageMapping;
}

const supportedLanguages = i18next.languages;
const currentLanguage = i18next.language;

const { pathname } = Astro.url;

const { languageMapping, ...attributes } = Astro.props;
---

<button
    id="select-toggle"
    class="cursor-pointer flex items-center gap-1 p-2 bg-white/10 rounded-full transition-colors text-xs sm:text-sm relative group"
>
    <IconTranslate className="w-4 h-4 sm:w-5 sm:h-5" />
    <span class="hidden sm:block">
        {currentLanguage === "en" ? "English" : "EspanÌƒol"}
    </span>
    <TooltipCursor label="Traducir" position="top-[40px] left-1/2"/>
</button>

<div class="absolute top-full right-10 mt-1 max-w-4xl hidden" id="select-menu">
    <div
        class="mx-1 rounded-xl border border-white/10 bg-black/80 backdrop-blur-3xl shadow-inner shadow-white/50"
    >
        <nav
            class="flex flex-col gap-2 p-1 text-gray-300 font-semibold text-sm sm:text-base"
        >
            {
                supportedLanguages.map((supportedLanguage: string) => {
                    let value = localizePath(pathname, supportedLanguage);
                    let flag = localeEmoji(supportedLanguage) + " ";

                    let nativeName = "";
                    let label = "";
                    if (
                        languageMapping &&
                        languageMapping.hasOwnProperty(supportedLanguage)
                    ) {
                        nativeName = languageMapping[supportedLanguage];
                    } else {
                        nativeName = ISO6991.getNativeName(supportedLanguage);
                    }

                    if (supportedLanguage === "qh") {
                        label = localeEmoji("es_PE") + " Quechua";
                    } else {
                        label = flag + nativeName;
                    }

                    return (
                        <a
                            class="p-2 hover:bg-white/10 hover:text-white rounded-lg transition-colors cursor-pointer"
                            href={value}
                        >
                            {label}
                        </a>
                    );
                })
            }
        </nav>
    </div>
</div>

<script>
    const selectToggle = document.querySelector("#select-toggle");
    const selectMenu = document.querySelector("#select-menu");
    selectToggle?.addEventListener("click", () => {
        selectMenu?.classList.toggle("hidden");
    });
    
</script>
